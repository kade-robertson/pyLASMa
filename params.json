{"name":"pylasma","tagline":"a LindenMASM interpreter in Python 3","body":"# Syntax\r\n\r\nThere are only a few keywords available in LindenMASM.\r\n\r\n1. `STT` - Begins every LindenMASM file.\r\n2. `AXI $` - Sets the axiom (initial state) of the system.\r\n * `$` is a series of commands/variables/constants, ranging from the built-ins plus any user-defined functions.\r\n3. `DEG $` - Sets the degree of which all turns will follow, default is 90.\r\n4. `MOV $` - Sets the move distance of which all position adjustments will follow, default is 10.\r\n5. `INC $` - Sets the number of iterations the generation should go through, default is 0.\r\n6. `SET $ #` - Sets a constant `$` to a specified command `#`\r\n * `$` should be a character that is not one of `[]+-`.\r\n * `#` will either be a 0 or a 1, where a 0 corresponds to the constant being one that draws forward, and a 1 corresponds to the constant being one that moves fowards.\r\n7. `RPL $ #` - On every iteration, variable/constant `$` will be replaced with the command/variable/constant string `#`.\r\n * `$` should be a character that is not one of `[]+-`. It does not need to be `SET` to be replaced.\r\n * `#` is a string of commands/variables/constants that `$` should be replaced with.\r\n8. `END` - Ends every LindenMASM file.\r\n\r\nEach keyword should be placed on a new line. Every file should start with `STT` and end with `END`.\r\n\r\n# Commands\r\n\r\nThese are the builtin commands you can use in the axiom, or any replacement.\r\n\r\n1. `+` - Rotates the pointer to the right `DEG` degrees.\r\n2. `-` - Rotates the pointer to the left `DEG` degrees.\r\n3. `[` - Saves the pointer's coordinates and heading to a list.\r\n4. `]` - Pops the last value of a list and sets the pointer's coordinates and heading to that.\r\n\r\n# Example\r\n\r\nCheck out the `linden-test.lasm` file for an example. It should produce something like this:\r\n\r\n![Example](http://i.imgur.com/aWsKfS3.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}